{"version":3,"file":"funk.cjs.production.min.js","sources":["../src/Tabs.tsx"],"sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport { useSwipeable, EventData } from 'react-swipeable'\nimport { useUID } from 'react-uid'\n\nenum Direction {\n  HORIZONTAL,\n  VERTICAL,\n}\n\ninterface TabContextValue {\n  id: string\n  activeTab: number\n  numTabs: number\n  setActiveTab(tab: number): void\n  direction: Direction\n}\n\nlet TabContext = createContext<TabContextValue>({\n  id: 'Please provide a unique id',\n  activeTab: 0,\n  numTabs: 0,\n  setActiveTab: () => {},\n  direction: Direction.HORIZONTAL,\n})\n\nexport function useTab(index: number) {\n  let { activeTab } = useContext(TabContext)\n\n  return {\n    isActive: activeTab === index,\n  }\n}\n\ninterface TabGroupProps {\n  initialActiveTab?: number\n  numTabs: number\n  children: React.ReactNode\n  direction?: Direction\n}\n\nexport function TabGroup({\n  initialActiveTab = 0,\n  numTabs,\n  direction = Direction.HORIZONTAL,\n  children,\n}: TabGroupProps) {\n  let id = useUID()\n  let [activeTab, setActiveTab] = useState(initialActiveTab)\n\n  let value = useMemo(\n    () => ({ id, activeTab, setActiveTab, numTabs, direction }),\n    [activeTab, setActiveTab, numTabs, direction]\n  )\n\n  return <TabContext.Provider value={value}>{children}</TabContext.Provider>\n}\n\ninterface TabProps {\n  index: number\n  className: string\n  activeClassName: string\n  inactiveClassName: string\n  trigger?: 'click' | 'hover' | 'none'\n  children?: React.ReactNode\n  [key: string]: any\n}\n\nexport function Tab({\n  index,\n  className,\n  activeClassName,\n  inactiveClassName,\n  trigger = 'click',\n  ...props\n}: TabProps) {\n  let { id, activeTab, setActiveTab } = useContext(TabContext)\n  let tabRef = useRef<HTMLButtonElement>()\n\n  useEffect(() => {\n    if (activeTab === index) {\n      tabRef.current?.focus()\n    }\n  }, [activeTab, index])\n\n  let calculatedClassName = useMemo(() => {\n    return [\n      className,\n      activeTab === index ? activeClassName : inactiveClassName,\n    ].join(' ')\n  }, [className, activeClassName, inactiveClassName, activeTab, index])\n\n  let interactionProps = useMemo(() => {\n    let interactions: any = {}\n\n    interactions.onClick = () => setActiveTab(index)\n\n    if (trigger === 'hover') {\n      interactions.onMouseEnter = () => setActiveTab(index)\n    }\n\n    return interactions\n  }, [trigger, setActiveTab, index])\n\n  return (\n    <button\n      ref={tabRef}\n      role=\"tab\"\n      aria-controls={`${id}-${index}`}\n      aria-selected={activeTab === index}\n      tabIndex={activeTab === index ? 0 : -1}\n      className={calculatedClassName}\n      {...interactionProps}\n      {...props}\n    />\n  )\n}\n\ntype HTMLTags = keyof JSX.IntrinsicElements\n\ninterface TabPanelProps {\n  as?: HTMLTags\n  index: number\n  className: string\n  activeClassName: string\n  inactiveClassName: string\n  children?: React.ReactNode\n  swipeable?: boolean\n  [key: string]: any\n}\n\nexport function TabPanel({\n  as: Component = 'div',\n  index,\n  className,\n  activeClassName,\n  inactiveClassName,\n  swipeable = false,\n  ...props\n}: TabPanelProps) {\n  let { id, activeTab, setActiveTab, numTabs } = useContext(TabContext)\n\n  let onSwiped = useCallback(\n    (e: EventData) => {\n      if (swipeable) {\n        if (e.dir === 'Right') {\n          let previous = activeTab - 1 >= 0 ? activeTab - 1 : numTabs - 1\n          setActiveTab(previous)\n        }\n\n        if (e.dir === 'Left') {\n          let next = activeTab + 1 < numTabs ? activeTab + 1 : 0\n          setActiveTab(next)\n        }\n      }\n    },\n    [swipeable, numTabs, activeTab, setActiveTab]\n  )\n\n  let handlers = useSwipeable({ onSwiped })\n\n  let calculatedClassName = useMemo(() => {\n    return [\n      className,\n      activeTab === index ? activeClassName : inactiveClassName,\n    ].join(' ')\n  }, [className, activeClassName, inactiveClassName, activeTab, index])\n\n  return (\n    // @ts-ignore\n    <Component\n      style={{\n        ...props.style,\n        visibility: activeTab === index ? 'visible' : 'hidden',\n      }}\n      id={`${id}-${index}`}\n      role=\"tabpanel\"\n      disabled={activeTab !== index}\n      aria-expanded={activeTab === index}\n      className={calculatedClassName}\n      {...handlers}\n      {...props}\n    />\n  )\n}\n\ninterface TabListProps {\n  as?: HTMLTags\n  children?: React.ReactNode\n  [key: string]: any\n}\n\nexport function TabList({ as: Component = 'div', ...props }: TabListProps) {\n  let tabListRef = useRef<any>()\n  let { setActiveTab, numTabs, activeTab, direction } = useContext(TabContext)\n\n  let handleKeyUp = useCallback(\n    (e: KeyboardEvent) => {\n      let actions: Record<string, () => void> = {\n        End: () => {\n          setActiveTab(numTabs - 1)\n        },\n        Home: () => {\n          setActiveTab(0)\n        },\n      }\n\n      if (direction === Direction.HORIZONTAL) {\n        actions.ArrowLeft = () => {\n          let previous = activeTab - 1 >= 0 ? activeTab - 1 : numTabs - 1\n          setActiveTab(previous)\n        }\n\n        actions.ArrowRight = () => {\n          let next = activeTab + 1 < numTabs ? activeTab + 1 : 0\n          setActiveTab(next)\n        }\n      }\n\n      if (direction === Direction.VERTICAL) {\n        actions.ArrowUp = () => {\n          let previous = activeTab - 1 >= 0 ? activeTab - 1 : numTabs - 1\n          setActiveTab(previous)\n        }\n\n        actions.ArrowDown = () => {\n          let next = activeTab + 1 < numTabs ? activeTab + 1 : 0\n          setActiveTab(next)\n        }\n      }\n\n      let action = actions[e.key]\n\n      if (action) {\n        e.preventDefault()\n        action()\n      }\n    },\n    [setActiveTab, activeTab, numTabs, direction]\n  )\n\n  useEffect(() => {\n    tabListRef.current.addEventListener('keyup', handleKeyUp)\n\n    return () => tabListRef.current?.removeEventListener('keyup', handleKeyUp)\n  }, [handleKeyUp])\n\n  // @ts-ignore\n  return <Component ref={tabListRef} role=\"tablist\" {...props} />\n}\n\nTabGroup.Tab = Tab\nTabGroup.TabPanel = TabPanel\nTabGroup.TabList = TabList\nTabGroup.useTab = useTab\n\nTabGroup.direction = Direction\n"],"names":["Direction","TabContext","createContext","id","activeTab","numTabs","setActiveTab","direction","HORIZONTAL","TabGroup","initialActiveTab","children","useUID","useState","value","useMemo","React","Provider","Tab","index","className","activeClassName","inactiveClassName","trigger","props","useContext","tabRef","useRef","useEffect","current","focus","calculatedClassName","join","interactionProps","interactions","onMouseEnter","ref","role","tabIndex","TabPanel","as","Component","swipeable","onSwiped","useCallback","e","dir","handlers","useSwipeable","style","visibility","disabled","TabList","tabListRef","handleKeyUp","actions","End","Home","ArrowLeft","ArrowRight","VERTICAL","ArrowUp","ArrowDown","action","key","preventDefault","addEventListener","_tabListRef$current","removeEventListener","useTab","isActive"],"mappings":"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"}