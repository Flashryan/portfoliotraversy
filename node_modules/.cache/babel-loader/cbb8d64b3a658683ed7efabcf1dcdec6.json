{"ast":null,"code":"var _jsxFileName = \"/Users/ryandavies/portfoliotraversy/src/components/DigitalProjects.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport sanityClient from '../client.js';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchDigital, fetchPrint, fetchUx, fetchMotion } from '../actions/projectActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport Modal from '../components/Modal';\nimport Lightbox from \"react-awesome-lightbox\"; // You need to import the CSS only once\n\nimport \"react-awesome-lightbox/build/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DigitalProjects({\n  showModal\n}) {\n  _s();\n\n  const options = {\n    buttons: {\n      backgroundColor: \"rgba(140, 94, 88, 0.8)\",\n      iconColor: \"rgba(241, 191, 152, 0.7)\"\n    },\n    settings: {\n      overlayColor: \"rgba(255, 237, 225, 1)\",\n      transitionSpeed: 1000,\n      transitionTimingFunction: \"linear\"\n    },\n    thumbnails: {\n      thumbnailsSize: [\"120px\", \"100px\"],\n      thumbnailsOpacity: 0.4\n    },\n    caption: {\n      captionColor: \"rgba(241, 191, 152, 1)\"\n    },\n    progressBar: {\n      size: \"4px\",\n      backgroundColor: \"rgba(255, 237, 225, 1)\",\n      fillColor: \"#AF9AB2\"\n    }\n  };\n  const [showDigital, setShowDigital] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchDigital());\n  }, [dispatch]);\n  const {\n    loading: digitalLoading,\n    error: digitalError\n  } = useSelector(state => state.fetchDigitalReducer);\n  const [postData, setPost] = useState(null);\n  useEffect(() => {\n    sanityClient.fetch(`*[_type == \"post\" && title match \"Digital\"]{\n        title,\n        slug,\n        mainImage {\n            asset -> {\n            _id,\n            url,\n            },\n            alt\n        }\n    }`).then(data => setPost(data)).catch(console.error);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"background-green-100 min-h-screen p-12 w-full\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"container mx-auto w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid md:grid-cols-2 lg:grid-cols-3 gap-8\",\n          children: postData && postData.map((post, index) => /*#__PURE__*/_jsxDEV(\"article\", {\n            type: \"button\",\n            onClick: showModal,\n            children: [/*#__PURE__*/_jsxDEV(Lightbox, {\n              images: post.mainImage.asset.url[0],\n              title: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"block h-64 relative rounded shadow leading-snug bg-white\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: post.mainImage.asset.url,\n                alt: post.mainImage.alt,\n                className: \"w-full h-full rounded-r object-cover absolute\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"block relative h-full flex justify-end items-end pr-4 pb-4\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"text-gray-800 text-lg font-blog px-3 py-4 bg-red-700 text-red-100\",\n                  children: post.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 29\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(DigitalProjects, \"tnIefHOX9A8DJQXYf8ILs7Cj8lA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = DigitalProjects;\n\nvar _c;\n\n$RefreshReg$(_c, \"DigitalProjects\");","map":{"version":3,"sources":["/Users/ryandavies/portfoliotraversy/src/components/DigitalProjects.js"],"names":["React","sanityClient","useEffect","useState","Link","fetchDigital","fetchPrint","fetchUx","fetchMotion","useDispatch","useSelector","Loader","Modal","Lightbox","DigitalProjects","showModal","options","buttons","backgroundColor","iconColor","settings","overlayColor","transitionSpeed","transitionTimingFunction","thumbnails","thumbnailsSize","thumbnailsOpacity","caption","captionColor","progressBar","size","fillColor","showDigital","setShowDigital","dispatch","loading","digitalLoading","error","digitalError","state","fetchDigitalReducer","postData","setPost","fetch","then","data","catch","console","map","post","index","mainImage","asset","url","title","alt"],"mappings":"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","sourcesContent":["import React from 'react'\nimport sanityClient from '../client.js';\nimport { useEffect, useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport {fetchDigital, fetchPrint, fetchUx, fetchMotion} from '../actions/projectActions';\nimport {useDispatch, useSelector} from 'react-redux'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport Modal from '../components/Modal';\n\nimport Lightbox from \"react-awesome-lightbox\";\n// You need to import the CSS only once\nimport \"react-awesome-lightbox/build/style.css\";\n\n\n\nexport default function DigitalProjects({showModal}) {\n\n    const options = {\n        buttons: {\n          backgroundColor: \"rgba(140, 94, 88, 0.8)\",\n          iconColor: \"rgba(241, 191, 152, 0.7)\"\n        },\n        settings: {\n          overlayColor: \"rgba(255, 237, 225, 1)\",\n          transitionSpeed: 1000,\n          transitionTimingFunction: \"linear\"\n        },\n        thumbnails: {\n          thumbnailsSize: [\"120px\", \"100px\"],\n          thumbnailsOpacity: 0.4\n        },\n        caption: {\n          captionColor: \"rgba(241, 191, 152, 1)\"\n        },\n        progressBar: {\n          size: \"4px\",\n          backgroundColor: \"rgba(255, 237, 225, 1)\",\n          fillColor: \"#AF9AB2\"\n        }\n      };\n\nconst [showDigital, setShowDigital] = useState(false)\n\nconst dispatch = useDispatch();\n    useEffect(() => {    \n        dispatch(fetchDigital());\n    }, [dispatch]);\n  \n    const {loading: digitalLoading, error: digitalError\n    } = useSelector(state => state.fetchDigitalReducer)\n    \n    \nconst [postData, setPost] = useState(null)\nuseEffect(() => {\n    sanityClient\n    .fetch(`*[_type == \"post\" && title match \"Digital\"]{\n        title,\n        slug,\n        mainImage {\n            asset -> {\n            _id,\n            url,\n            },\n            alt\n        }\n    }`)\n    .then((data) => setPost(data))\n    .catch(console.error);\n}, [])\n\n    return (\n        <>\n        <main className='background-green-100 min-h-screen p-12 w-full'>\n\n            <section className=\"container mx-auto w-full\" >\n            \n                {<div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\" >\n                \n                    {postData && postData.map((post, index) => ( \n                    <article type=\"button\" onClick={showModal}>\n                        <Lightbox images={post.mainImage.asset.url[0]} title={post.title}></Lightbox>\n                       {/*  <Link to={'/post/' + post.slug.current} key={post.slug.current} > */}\n                        <span\n                         className=\"block h-64 relative rounded shadow leading-snug bg-white\" key={index}\n                        >\n                            <img src={post.mainImage.asset.url}\n                             alt={post.mainImage.alt}\n                             className=\"w-full h-full rounded-r object-cover absolute\"\n                            />\n                            <span className=\"block relative h-full flex justify-end items-end pr-4 pb-4\">\n                                <h3 className=\"text-gray-800 text-lg font-blog px-3 py-4 bg-red-700 text-red-100\">\n                                    {post.title}\n                                </h3>\n                            </span>\n                        </span>\n                        {/* </Link> */}\n                        \n                        \n                    </article>\n                    \n                    ))}\n\n                </div>}\n                \n            </section>\n        </main>\n        \n    </>\n    )\n}"]},"metadata":{},"sourceType":"module"}