{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ryandavies/portfoliotraversy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ryandavies/portfoliotraversy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import sanityClient from'../client';import{DIGITAL_FETCH_REQUEST,DIGITAL_FETCH_SUCCESS,DIGITAL_FETCH_FAIL,PRINT_FETCH_FAIL,PRINT_FETCH_SUCCESS,PRINT_FETCH_REQUEST,MOTION_FETCH_FAIL,MOTION_FETCH_REQUEST,MOTION_FETCH_SUCCESS,UX_FETCH_FAIL,UX_FETCH_SUCCESS,UX_FETCH_REQUEST}from'../constants/projectConstants';var fetchDigital=function fetchDigital(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var digitalData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch({type:DIGITAL_FETCH_REQUEST});_context.next=4;return sanityClient.fetch(\"*[_type == \\\"post\\\" && title == 'Digital']{\\n                title,\\n                slug,\\n                mainImage {\\n                    asset -> {\\n                    _id,\\n                    url,\\n                    },\\n                    alt\\n                }\\n            }\");case 4:digitalData=_context.sent;dispatch({type:DIGITAL_FETCH_SUCCESS,payload:digitalData});_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);dispatch({type:DIGITAL_FETCH_FAIL,payload:_context.t0.message});case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,8]]);}));return function(_x){return _ref.apply(this,arguments);};}();};var fetchPrint=function fetchPrint(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var printData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;dispatch({type:PRINT_FETCH_REQUEST});_context2.next=4;return sanityClient.fetch(\"*[_type == \\\"post\\\" && title == 'Print']{\\n                title,\\n                slug,\\n                mainImage {\\n                    asset -> {\\n                    _id,\\n                    url,\\n                    },\\n                    alt\\n                }\\n            }\");case 4:printData=_context2.sent;dispatch({type:PRINT_FETCH_SUCCESS,payload:printData});_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](0);dispatch({type:PRINT_FETCH_FAIL,payload:_context2.t0.message});case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,8]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};var fetchMotion=function fetchMotion(){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var motionData;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;dispatch({type:MOTION_FETCH_REQUEST});_context3.next=4;return sanityClient.fetch(\"*[_type == \\\"post\\\" && title == 'Motion']{\\n                title,\\n                slug,\\n                mainImage {\\n                    asset -> {\\n                    _id,\\n                    url,\\n                    },\\n                    alt\\n                }\\n            }\");case 4:motionData=_context3.sent;dispatch({type:MOTION_FETCH_SUCCESS,payload:motionData});_context3.next=11;break;case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);dispatch({type:MOTION_FETCH_FAIL,payload:_context3.t0.message});case 11:case\"end\":return _context3.stop();}}},_callee3,null,[[0,8]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};var fetchUx=function fetchUx(){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var uxData;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;dispatch({type:UX_FETCH_REQUEST});_context4.next=4;return sanityClient.fetch(\"*[_type == \\\"post\\\" && title == 'UX']{\\n                title,\\n                slug,\\n                mainImage {\\n                    asset -> {\\n                    _id,\\n                    url,\\n                    },\\n                    alt\\n                }\\n            }\");case 4:uxData=_context4.sent;dispatch({type:UX_FETCH_SUCCESS,payload:uxData});_context4.next=11;break;case 8:_context4.prev=8;_context4.t0=_context4[\"catch\"](0);dispatch({type:UX_FETCH_FAIL,payload:_context4.t0.message});case 11:case\"end\":return _context4.stop();}}},_callee4,null,[[0,8]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};export{fetchUx,fetchDigital,fetchPrint,fetchMotion};","map":{"version":3,"sources":["/Users/ryandavies/portfoliotraversy/src/actions/projectActions.js"],"names":["sanityClient","DIGITAL_FETCH_REQUEST","DIGITAL_FETCH_SUCCESS","DIGITAL_FETCH_FAIL","PRINT_FETCH_FAIL","PRINT_FETCH_SUCCESS","PRINT_FETCH_REQUEST","MOTION_FETCH_FAIL","MOTION_FETCH_REQUEST","MOTION_FETCH_SUCCESS","UX_FETCH_FAIL","UX_FETCH_SUCCESS","UX_FETCH_REQUEST","fetchDigital","dispatch","type","fetch","digitalData","payload","message","fetchPrint","printData","fetchMotion","motionData","fetchUx","uxData"],"mappings":"iTAAA,MAAOA,CAAAA,YAAP,KAAyB,WAAzB,CAEA,OACIC,qBADJ,CAEIC,qBAFJ,CAGIC,kBAHJ,CAKIC,gBALJ,CAMIC,mBANJ,CAOIC,mBAPJ,CASIC,iBATJ,CAUIC,oBAVJ,CAWIC,oBAXJ,CAaIC,aAbJ,CAcIC,gBAdJ,CAeIC,gBAfJ,KAgBO,+BAhBP,CAkBA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,kGAAM,iBAAOC,QAAP,kJAEnBA,QAAQ,CAAC,CACLC,IAAI,CAACd,qBADA,CAAD,CAAR,CAFmB,sBAKOD,CAAAA,YAAY,CAACgB,KAAb,kSALP,QAKbC,WALa,eAkBnBH,QAAQ,CAAC,CACLC,IAAI,CAACb,qBADA,CAELgB,OAAO,CAACD,WAFH,CAAD,CAAR,CAlBmB,+EAuBnBH,QAAQ,CAAC,CACLC,IAAI,CAACZ,kBADA,CAELe,OAAO,CAAC,YAAMC,OAFT,CAAD,CAAR,CAvBmB,oEAAN,gEAArB,CA+BA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,mGAAM,kBAAON,QAAP,qJAEjBA,QAAQ,CAAC,CACLC,IAAI,CAACT,mBADA,CAAD,CAAR,CAFiB,uBAKON,CAAAA,YAAY,CAACgB,KAAb,gSALP,QAKXK,SALW,gBAkBjBP,QAAQ,CAAC,CACLC,IAAI,CAACV,mBADA,CAELa,OAAO,CAACG,SAFH,CAAD,CAAR,CAlBiB,mFAuBjBP,QAAQ,CAAC,CACLC,IAAI,CAACX,gBADA,CAELc,OAAO,CAAC,aAAMC,OAFT,CAAD,CAAR,CAvBiB,sEAAN,kEAAnB,CA+BA,GAAMG,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,mGAAM,kBAAOR,QAAP,sJAElBA,QAAQ,CAAC,CACLC,IAAI,CAACP,oBADA,CAAD,CAAR,CAFkB,uBAKOR,CAAAA,YAAY,CAACgB,KAAb,iSALP,QAKZO,UALY,gBAkBlBT,QAAQ,CAAC,CACLC,IAAI,CAACN,oBADA,CAELS,OAAO,CAACK,UAFH,CAAD,CAAR,CAlBkB,mFAuBlBT,QAAQ,CAAC,CACLC,IAAI,CAACR,iBADA,CAELW,OAAO,CAAC,aAAMC,OAFT,CAAD,CAAR,CAvBkB,sEAAN,kEAApB,CA+BA,GAAMK,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,mGAAM,kBAAOV,QAAP,kJAEdA,QAAQ,CAAC,CACLC,IAAI,CAACH,gBADA,CAAD,CAAR,CAFc,uBAKOZ,CAAAA,YAAY,CAACgB,KAAb,6RALP,QAKRS,MALQ,gBAkBdX,QAAQ,CAAC,CACLC,IAAI,CAACJ,gBADA,CAELO,OAAO,CAACO,MAFH,CAAD,CAAR,CAlBc,mFAuBdX,QAAQ,CAAC,CACLC,IAAI,CAACL,aADA,CAELQ,OAAO,CAAC,aAAMC,OAFT,CAAD,CAAR,CAvBc,sEAAN,kEAAhB,CA8BA,OACIK,OADJ,CAEIX,YAFJ,CAGIO,UAHJ,CAIIE,WAJJ","sourcesContent":["import sanityClient from '../client'\n\nimport  {\n    DIGITAL_FETCH_REQUEST,\n    DIGITAL_FETCH_SUCCESS,\n    DIGITAL_FETCH_FAIL,\n\n    PRINT_FETCH_FAIL,\n    PRINT_FETCH_SUCCESS,\n    PRINT_FETCH_REQUEST,\n\n    MOTION_FETCH_FAIL,\n    MOTION_FETCH_REQUEST,\n    MOTION_FETCH_SUCCESS,\n\n    UX_FETCH_FAIL,\n    UX_FETCH_SUCCESS,\n    UX_FETCH_REQUEST,\n} from '../constants/projectConstants';\n\nconst fetchDigital = () => async (dispatch) => {\n    try {\n        dispatch({\n            type:DIGITAL_FETCH_REQUEST\n        });\n        const digitalData = await sanityClient.fetch (\n            `*[_type == \"post\" && title == 'Digital']{\n                title,\n                slug,\n                mainImage {\n                    asset -> {\n                    _id,\n                    url,\n                    },\n                    alt\n                }\n            }`\n        );\n        dispatch({\n            type:DIGITAL_FETCH_SUCCESS,\n            payload:digitalData\n        })\n    } catch (error) {\n        dispatch({\n            type:DIGITAL_FETCH_FAIL,\n            payload:error.message\n        });\n    }\n    \n};\n\nconst fetchPrint = () => async (dispatch) => {\n    try {\n        dispatch({\n            type:PRINT_FETCH_REQUEST\n        });\n        const printData = await sanityClient.fetch (\n            `*[_type == \"post\" && title == 'Print']{\n                title,\n                slug,\n                mainImage {\n                    asset -> {\n                    _id,\n                    url,\n                    },\n                    alt\n                }\n            }`\n        );\n        dispatch({\n            type:PRINT_FETCH_SUCCESS,\n            payload:printData\n        })\n    } catch (error) {\n        dispatch({\n            type:PRINT_FETCH_FAIL,\n            payload:error.message\n        });\n    } \n};\n\n\nconst fetchMotion = () => async (dispatch) => {\n    try {\n        dispatch({\n            type:MOTION_FETCH_REQUEST\n        });\n        const motionData = await sanityClient.fetch (\n            `*[_type == \"post\" && title == 'Motion']{\n                title,\n                slug,\n                mainImage {\n                    asset -> {\n                    _id,\n                    url,\n                    },\n                    alt\n                }\n            }`\n        );\n        dispatch({\n            type:MOTION_FETCH_SUCCESS,\n            payload:motionData\n        })\n    } catch (error) {\n        dispatch({\n            type:MOTION_FETCH_FAIL,\n            payload:error.message\n        });\n    } \n};\n\n\nconst fetchUx = () => async (dispatch) => {\n    try {\n        dispatch({\n            type:UX_FETCH_REQUEST\n        });\n        const uxData = await sanityClient.fetch (\n            `*[_type == \"post\" && title == 'UX']{\n                title,\n                slug,\n                mainImage {\n                    asset -> {\n                    _id,\n                    url,\n                    },\n                    alt\n                }\n            }`\n        );\n        dispatch({\n            type:UX_FETCH_SUCCESS,\n            payload:uxData\n        })\n    } catch (error) {\n        dispatch({\n            type:UX_FETCH_FAIL,\n            payload:error.message\n        });\n    } \n};\n\nexport {\n    fetchUx,\n    fetchDigital,\n    fetchPrint,\n    fetchMotion\n  };"]},"metadata":{},"sourceType":"module"}