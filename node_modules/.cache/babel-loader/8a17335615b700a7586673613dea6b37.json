{"ast":null,"code":"import sanityClient from '../client';\nimport { DIGITAL_FETCH_REQUEST, DIGITAL_FETCH_SUCCESS, DIGITAL_FETCH_FAIL, PRINT_FETCH_FAIL, PRINT_FETCH_SUCCESS, PRINT_FETCH_REQUEST, MOTION_FETCH_FAIL, MOTION_FETCH_REQUEST, MOTION_FETCH_SUCCESS, UX_FETCH_FAIL, UX_FETCH_SUCCESS, UX_FETCH_REQUEST } from '../constants/projectConstants';\n\nconst fetchDigital = () => async dispatch => {\n  try {\n    dispatch({\n      type: DIGITAL_FETCH_REQUEST\n    });\n    const digitalData = await sanityClient.fetch(`*[_type == \"post\" && title == 'Digital']{\n                title,\n                slug,\n                mainImage {\n                    asset -> {\n                    _id,\n                    url,\n                    },\n                    alt\n                }\n            }`);\n    dispatch({\n      type: DIGITAL_FETCH_SUCCESS,\n      payload: digitalData\n    });\n  } catch (error) {\n    dispatch({\n      type: DIGITAL_FETCH_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst fetchPrint = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRINT_FETCH_REQUEST\n    });\n    const printData = await sanityClient.fetch(`*[_type == \"post\" && title == 'Print']{\n                title,\n                slug,\n                mainImage {\n                    asset -> {\n                    _id,\n                    url,\n                    },\n                    alt\n                }\n            }`);\n    dispatch({\n      type: PRINT_FETCH_SUCCESS,\n      payload: printData\n    });\n  } catch (error) {\n    dispatch({\n      type: PRINT_FETCH_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst fetchMotion = () => async dispatch => {\n  try {\n    dispatch({\n      type: MOTION_FETCH_REQUEST\n    });\n    const motionData = await sanityClient.fetch(`*[_type == \"post\" && title == 'Motion']{\n                title,\n                slug,\n                mainImage {\n                    asset -> {\n                    _id,\n                    url,\n                    },\n                    alt\n                }\n            }`);\n    dispatch({\n      type: MOTION_FETCH_SUCCESS,\n      payload: motionData\n    });\n  } catch (error) {\n    dispatch({\n      type: MOTION_FETCH_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst fetchUx = () => async dispatch => {\n  try {\n    dispatch({\n      type: UX_FETCH_REQUEST\n    });\n    const uxData = await sanityClient.fetch(`*[_type == \"post\" && title == 'UX']{\n                title,\n                slug,\n                mainImage {\n                    asset -> {\n                    _id,\n                    url,\n                    },\n                    alt\n                }\n            }`);\n    dispatch({\n      type: UX_FETCH_SUCCESS,\n      payload: uxData\n    });\n  } catch (error) {\n    dispatch({\n      type: UX_FETCH_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { fetchUx, fetchDigital, fetchPrint, fetchMotion };","map":{"version":3,"sources":["/Users/ryandavies/portfoliotraversy/src/actions/projectActions.js"],"names":["sanityClient","DIGITAL_FETCH_REQUEST","DIGITAL_FETCH_SUCCESS","DIGITAL_FETCH_FAIL","PRINT_FETCH_FAIL","PRINT_FETCH_SUCCESS","PRINT_FETCH_REQUEST","MOTION_FETCH_FAIL","MOTION_FETCH_REQUEST","MOTION_FETCH_SUCCESS","UX_FETCH_FAIL","UX_FETCH_SUCCESS","UX_FETCH_REQUEST","fetchDigital","dispatch","type","digitalData","fetch","payload","error","message","fetchPrint","printData","fetchMotion","motionData","fetchUx","uxData"],"mappings":"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","sourcesContent":["import sanityClient from '../client'\n\nimport  {\n    DIGITAL_FETCH_REQUEST,\n    DIGITAL_FETCH_SUCCESS,\n    DIGITAL_FETCH_FAIL,\n\n    PRINT_FETCH_FAIL,\n    PRINT_FETCH_SUCCESS,\n    PRINT_FETCH_REQUEST,\n\n    MOTION_FETCH_FAIL,\n    MOTION_FETCH_REQUEST,\n    MOTION_FETCH_SUCCESS,\n\n    UX_FETCH_FAIL,\n    UX_FETCH_SUCCESS,\n    UX_FETCH_REQUEST,\n} from '../constants/projectConstants';\n\nconst fetchDigital = () => async (dispatch) => {\n    try {\n        dispatch({\n            type:DIGITAL_FETCH_REQUEST\n        });\n        const digitalData = await sanityClient.fetch (\n            `*[_type == \"post\" && title == 'Digital']{\n                title,\n                slug,\n                mainImage {\n                    asset -> {\n                    _id,\n                    url,\n                    },\n                    alt\n                }\n            }`\n        );\n        dispatch({\n            type:DIGITAL_FETCH_SUCCESS,\n            payload:digitalData\n        })\n    } catch (error) {\n        dispatch({\n            type:DIGITAL_FETCH_FAIL,\n            payload:error.message\n        });\n    }\n    \n};\n\nconst fetchPrint = () => async (dispatch) => {\n    try {\n        dispatch({\n            type:PRINT_FETCH_REQUEST\n        });\n        const printData = await sanityClient.fetch (\n            `*[_type == \"post\" && title == 'Print']{\n                title,\n                slug,\n                mainImage {\n                    asset -> {\n                    _id,\n                    url,\n                    },\n                    alt\n                }\n            }`\n        );\n        dispatch({\n            type:PRINT_FETCH_SUCCESS,\n            payload:printData\n        })\n    } catch (error) {\n        dispatch({\n            type:PRINT_FETCH_FAIL,\n            payload:error.message\n        });\n    } \n};\n\n\nconst fetchMotion = () => async (dispatch) => {\n    try {\n        dispatch({\n            type:MOTION_FETCH_REQUEST\n        });\n        const motionData = await sanityClient.fetch (\n            `*[_type == \"post\" && title == 'Motion']{\n                title,\n                slug,\n                mainImage {\n                    asset -> {\n                    _id,\n                    url,\n                    },\n                    alt\n                }\n            }`\n        );\n        dispatch({\n            type:MOTION_FETCH_SUCCESS,\n            payload:motionData\n        })\n    } catch (error) {\n        dispatch({\n            type:MOTION_FETCH_FAIL,\n            payload:error.message\n        });\n    } \n};\n\n\nconst fetchUx = () => async (dispatch) => {\n    try {\n        dispatch({\n            type:UX_FETCH_REQUEST\n        });\n        const uxData = await sanityClient.fetch (\n            `*[_type == \"post\" && title == 'UX']{\n                title,\n                slug,\n                mainImage {\n                    asset -> {\n                    _id,\n                    url,\n                    },\n                    alt\n                }\n            }`\n        );\n        dispatch({\n            type:UX_FETCH_SUCCESS,\n            payload:uxData\n        })\n    } catch (error) {\n        dispatch({\n            type:UX_FETCH_FAIL,\n            payload:error.message\n        });\n    } \n};\n\nexport {\n    fetchUx,\n    fetchDigital,\n    fetchPrint,\n    fetchMotion\n  };"]},"metadata":{},"sourceType":"module"}