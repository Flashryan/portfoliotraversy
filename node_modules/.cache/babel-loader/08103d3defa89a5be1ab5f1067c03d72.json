{"ast":null,"code":"import React, { useState, useMemo, createContext, useContext, useRef, useEffect, useCallback } from 'react';\nimport { useSwipeable } from 'react-swipeable';\nimport { useUID } from 'react-uid';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar Direction;\n\n(function (Direction) {\n  Direction[Direction[\"HORIZONTAL\"] = 0] = \"HORIZONTAL\";\n  Direction[Direction[\"VERTICAL\"] = 1] = \"VERTICAL\";\n})(Direction || (Direction = {}));\n\nvar TabContext = /*#__PURE__*/createContext({\n  id: 'Please provide a unique id',\n  activeTab: 0,\n  numTabs: 0,\n  setActiveTab: function setActiveTab() {},\n  direction: Direction.HORIZONTAL\n});\n\nfunction useTab(index) {\n  var _useContext = useContext(TabContext),\n      activeTab = _useContext.activeTab;\n\n  return {\n    isActive: activeTab === index\n  };\n}\n\nfunction TabGroup(_ref) {\n  var _ref$initialActiveTab = _ref.initialActiveTab,\n      initialActiveTab = _ref$initialActiveTab === void 0 ? 0 : _ref$initialActiveTab,\n      numTabs = _ref.numTabs,\n      _ref$direction = _ref.direction,\n      direction = _ref$direction === void 0 ? Direction.HORIZONTAL : _ref$direction,\n      children = _ref.children;\n  var id = useUID();\n\n  var _useState = useState(initialActiveTab),\n      activeTab = _useState[0],\n      setActiveTab = _useState[1];\n\n  var value = useMemo(function () {\n    return {\n      id: id,\n      activeTab: activeTab,\n      setActiveTab: setActiveTab,\n      numTabs: numTabs,\n      direction: direction\n    };\n  }, [activeTab, setActiveTab, numTabs, direction]);\n  return React.createElement(TabContext.Provider, {\n    value: value\n  }, children);\n}\n\nfunction Tab(_ref2) {\n  var index = _ref2.index,\n      className = _ref2.className,\n      activeClassName = _ref2.activeClassName,\n      inactiveClassName = _ref2.inactiveClassName,\n      _ref2$trigger = _ref2.trigger,\n      trigger = _ref2$trigger === void 0 ? 'click' : _ref2$trigger,\n      props = _objectWithoutPropertiesLoose(_ref2, [\"index\", \"className\", \"activeClassName\", \"inactiveClassName\", \"trigger\"]);\n\n  var _useContext2 = useContext(TabContext),\n      id = _useContext2.id,\n      activeTab = _useContext2.activeTab,\n      setActiveTab = _useContext2.setActiveTab;\n\n  var tabRef = useRef();\n  useEffect(function () {\n    if (activeTab === index) {\n      var _tabRef$current;\n\n      (_tabRef$current = tabRef.current) == null ? void 0 : _tabRef$current.focus();\n    }\n  }, [activeTab, index]);\n  var calculatedClassName = useMemo(function () {\n    return [className, activeTab === index ? activeClassName : inactiveClassName].join(' ');\n  }, [className, activeClassName, inactiveClassName, activeTab, index]);\n  var interactionProps = useMemo(function () {\n    var interactions = {};\n\n    interactions.onClick = function () {\n      return setActiveTab(index);\n    };\n\n    if (trigger === 'hover') {\n      interactions.onMouseEnter = function () {\n        return setActiveTab(index);\n      };\n    }\n\n    return interactions;\n  }, [trigger, setActiveTab, index]);\n  return React.createElement(\"button\", Object.assign({\n    ref: tabRef,\n    role: \"tab\",\n    \"aria-controls\": id + \"-\" + index,\n    \"aria-selected\": activeTab === index,\n    tabIndex: activeTab === index ? 0 : -1,\n    className: calculatedClassName\n  }, interactionProps, props));\n}\n\nfunction TabPanel(_ref3) {\n  var _ref3$as = _ref3.as,\n      Component = _ref3$as === void 0 ? 'div' : _ref3$as,\n      index = _ref3.index,\n      className = _ref3.className,\n      activeClassName = _ref3.activeClassName,\n      inactiveClassName = _ref3.inactiveClassName,\n      _ref3$swipeable = _ref3.swipeable,\n      swipeable = _ref3$swipeable === void 0 ? false : _ref3$swipeable,\n      props = _objectWithoutPropertiesLoose(_ref3, [\"as\", \"index\", \"className\", \"activeClassName\", \"inactiveClassName\", \"swipeable\"]);\n\n  var _useContext3 = useContext(TabContext),\n      id = _useContext3.id,\n      activeTab = _useContext3.activeTab,\n      setActiveTab = _useContext3.setActiveTab,\n      numTabs = _useContext3.numTabs;\n\n  var onSwiped = useCallback(function (e) {\n    if (swipeable) {\n      if (e.dir === 'Right') {\n        var previous = activeTab - 1 >= 0 ? activeTab - 1 : numTabs - 1;\n        setActiveTab(previous);\n      }\n\n      if (e.dir === 'Left') {\n        var next = activeTab + 1 < numTabs ? activeTab + 1 : 0;\n        setActiveTab(next);\n      }\n    }\n  }, [swipeable, numTabs, activeTab, setActiveTab]);\n  var handlers = useSwipeable({\n    onSwiped: onSwiped\n  });\n  var calculatedClassName = useMemo(function () {\n    return [className, activeTab === index ? activeClassName : inactiveClassName].join(' ');\n  }, [className, activeClassName, inactiveClassName, activeTab, index]);\n  return (// @ts-ignore\n    React.createElement(Component, Object.assign({\n      style: _extends({}, props.style, {\n        visibility: activeTab === index ? 'visible' : 'hidden'\n      }),\n      id: id + \"-\" + index,\n      role: \"tabpanel\",\n      disabled: activeTab !== index,\n      \"aria-expanded\": activeTab === index,\n      className: calculatedClassName\n    }, handlers, props))\n  );\n}\n\nfunction TabList(_ref4) {\n  var _ref4$as = _ref4.as,\n      Component = _ref4$as === void 0 ? 'div' : _ref4$as,\n      props = _objectWithoutPropertiesLoose(_ref4, [\"as\"]);\n\n  var tabListRef = useRef();\n\n  var _useContext4 = useContext(TabContext),\n      setActiveTab = _useContext4.setActiveTab,\n      numTabs = _useContext4.numTabs,\n      activeTab = _useContext4.activeTab,\n      direction = _useContext4.direction;\n\n  var handleKeyUp = useCallback(function (e) {\n    var actions = {\n      End: function End() {\n        setActiveTab(numTabs - 1);\n      },\n      Home: function Home() {\n        setActiveTab(0);\n      }\n    };\n\n    if (direction === Direction.HORIZONTAL) {\n      actions.ArrowLeft = function () {\n        var previous = activeTab - 1 >= 0 ? activeTab - 1 : numTabs - 1;\n        setActiveTab(previous);\n      };\n\n      actions.ArrowRight = function () {\n        var next = activeTab + 1 < numTabs ? activeTab + 1 : 0;\n        setActiveTab(next);\n      };\n    }\n\n    if (direction === Direction.VERTICAL) {\n      actions.ArrowUp = function () {\n        var previous = activeTab - 1 >= 0 ? activeTab - 1 : numTabs - 1;\n        setActiveTab(previous);\n      };\n\n      actions.ArrowDown = function () {\n        var next = activeTab + 1 < numTabs ? activeTab + 1 : 0;\n        setActiveTab(next);\n      };\n    }\n\n    var action = actions[e.key];\n\n    if (action) {\n      e.preventDefault();\n      action();\n    }\n  }, [setActiveTab, activeTab, numTabs, direction]);\n  useEffect(function () {\n    tabListRef.current.addEventListener('keyup', handleKeyUp);\n    return function () {\n      var _tabListRef$current;\n\n      return (_tabListRef$current = tabListRef.current) == null ? void 0 : _tabListRef$current.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [handleKeyUp]); // @ts-ignore\n\n  return React.createElement(Component, Object.assign({\n    ref: tabListRef,\n    role: \"tablist\"\n  }, props));\n}\n\nTabGroup.Tab = Tab;\nTabGroup.TabPanel = TabPanel;\nTabGroup.TabList = TabList;\nTabGroup.useTab = useTab;\nTabGroup.direction = Direction;\nexport { TabGroup };","map":{"version":3,"sources":["../src/Tabs.tsx"],"names":["Direction","TabContext","createContext","id","activeTab","numTabs","setActiveTab","direction","HORIZONTAL","useTab","index","useContext","isActive","TabGroup","initialActiveTab","children","useUID","useState","value","useMemo","Tab","className","activeClassName","inactiveClassName","trigger","props","tabRef","useRef","useEffect","calculatedClassName","interactionProps","interactions","React","ref","role","tabIndex","TabPanel","as","Component","swipeable","onSwiped","useCallback","e","previous","next","handlers","useSwipeable","style","visibility","disabled","TabList","tabListRef","handleKeyUp","actions","End","Home","action"],"mappings":"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","sourcesContent":["import React, {\n  createContext,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport { useSwipeable, EventData } from 'react-swipeable'\nimport { useUID } from 'react-uid'\n\nenum Direction {\n  HORIZONTAL,\n  VERTICAL,\n}\n\ninterface TabContextValue {\n  id: string\n  activeTab: number\n  numTabs: number\n  setActiveTab(tab: number): void\n  direction: Direction\n}\n\nlet TabContext = createContext<TabContextValue>({\n  id: 'Please provide a unique id',\n  activeTab: 0,\n  numTabs: 0,\n  setActiveTab: () => {},\n  direction: Direction.HORIZONTAL,\n})\n\nexport function useTab(index: number) {\n  let { activeTab } = useContext(TabContext)\n\n  return {\n    isActive: activeTab === index,\n  }\n}\n\ninterface TabGroupProps {\n  initialActiveTab?: number\n  numTabs: number\n  children: React.ReactNode\n  direction?: Direction\n}\n\nexport function TabGroup({\n  initialActiveTab = 0,\n  numTabs,\n  direction = Direction.HORIZONTAL,\n  children,\n}: TabGroupProps) {\n  let id = useUID()\n  let [activeTab, setActiveTab] = useState(initialActiveTab)\n\n  let value = useMemo(\n    () => ({ id, activeTab, setActiveTab, numTabs, direction }),\n    [activeTab, setActiveTab, numTabs, direction]\n  )\n\n  return <TabContext.Provider value={value}>{children}</TabContext.Provider>\n}\n\ninterface TabProps {\n  index: number\n  className: string\n  activeClassName: string\n  inactiveClassName: string\n  trigger?: 'click' | 'hover' | 'none'\n  children?: React.ReactNode\n  [key: string]: any\n}\n\nexport function Tab({\n  index,\n  className,\n  activeClassName,\n  inactiveClassName,\n  trigger = 'click',\n  ...props\n}: TabProps) {\n  let { id, activeTab, setActiveTab } = useContext(TabContext)\n  let tabRef = useRef<HTMLButtonElement>()\n\n  useEffect(() => {\n    if (activeTab === index) {\n      tabRef.current?.focus()\n    }\n  }, [activeTab, index])\n\n  let calculatedClassName = useMemo(() => {\n    return [\n      className,\n      activeTab === index ? activeClassName : inactiveClassName,\n    ].join(' ')\n  }, [className, activeClassName, inactiveClassName, activeTab, index])\n\n  let interactionProps = useMemo(() => {\n    let interactions: any = {}\n\n    interactions.onClick = () => setActiveTab(index)\n\n    if (trigger === 'hover') {\n      interactions.onMouseEnter = () => setActiveTab(index)\n    }\n\n    return interactions\n  }, [trigger, setActiveTab, index])\n\n  return (\n    <button\n      ref={tabRef}\n      role=\"tab\"\n      aria-controls={`${id}-${index}`}\n      aria-selected={activeTab === index}\n      tabIndex={activeTab === index ? 0 : -1}\n      className={calculatedClassName}\n      {...interactionProps}\n      {...props}\n    />\n  )\n}\n\ntype HTMLTags = keyof JSX.IntrinsicElements\n\ninterface TabPanelProps {\n  as?: HTMLTags\n  index: number\n  className: string\n  activeClassName: string\n  inactiveClassName: string\n  children?: React.ReactNode\n  swipeable?: boolean\n  [key: string]: any\n}\n\nexport function TabPanel({\n  as: Component = 'div',\n  index,\n  className,\n  activeClassName,\n  inactiveClassName,\n  swipeable = false,\n  ...props\n}: TabPanelProps) {\n  let { id, activeTab, setActiveTab, numTabs } = useContext(TabContext)\n\n  let onSwiped = useCallback(\n    (e: EventData) => {\n      if (swipeable) {\n        if (e.dir === 'Right') {\n          let previous = activeTab - 1 >= 0 ? activeTab - 1 : numTabs - 1\n          setActiveTab(previous)\n        }\n\n        if (e.dir === 'Left') {\n          let next = activeTab + 1 < numTabs ? activeTab + 1 : 0\n          setActiveTab(next)\n        }\n      }\n    },\n    [swipeable, numTabs, activeTab, setActiveTab]\n  )\n\n  let handlers = useSwipeable({ onSwiped })\n\n  let calculatedClassName = useMemo(() => {\n    return [\n      className,\n      activeTab === index ? activeClassName : inactiveClassName,\n    ].join(' ')\n  }, [className, activeClassName, inactiveClassName, activeTab, index])\n\n  return (\n    // @ts-ignore\n    <Component\n      style={{\n        ...props.style,\n        visibility: activeTab === index ? 'visible' : 'hidden',\n      }}\n      id={`${id}-${index}`}\n      role=\"tabpanel\"\n      disabled={activeTab !== index}\n      aria-expanded={activeTab === index}\n      className={calculatedClassName}\n      {...handlers}\n      {...props}\n    />\n  )\n}\n\ninterface TabListProps {\n  as?: HTMLTags\n  children?: React.ReactNode\n  [key: string]: any\n}\n\nexport function TabList({ as: Component = 'div', ...props }: TabListProps) {\n  let tabListRef = useRef<any>()\n  let { setActiveTab, numTabs, activeTab, direction } = useContext(TabContext)\n\n  let handleKeyUp = useCallback(\n    (e: KeyboardEvent) => {\n      let actions: Record<string, () => void> = {\n        End: () => {\n          setActiveTab(numTabs - 1)\n        },\n        Home: () => {\n          setActiveTab(0)\n        },\n      }\n\n      if (direction === Direction.HORIZONTAL) {\n        actions.ArrowLeft = () => {\n          let previous = activeTab - 1 >= 0 ? activeTab - 1 : numTabs - 1\n          setActiveTab(previous)\n        }\n\n        actions.ArrowRight = () => {\n          let next = activeTab + 1 < numTabs ? activeTab + 1 : 0\n          setActiveTab(next)\n        }\n      }\n\n      if (direction === Direction.VERTICAL) {\n        actions.ArrowUp = () => {\n          let previous = activeTab - 1 >= 0 ? activeTab - 1 : numTabs - 1\n          setActiveTab(previous)\n        }\n\n        actions.ArrowDown = () => {\n          let next = activeTab + 1 < numTabs ? activeTab + 1 : 0\n          setActiveTab(next)\n        }\n      }\n\n      let action = actions[e.key]\n\n      if (action) {\n        e.preventDefault()\n        action()\n      }\n    },\n    [setActiveTab, activeTab, numTabs, direction]\n  )\n\n  useEffect(() => {\n    tabListRef.current.addEventListener('keyup', handleKeyUp)\n\n    return () => tabListRef.current?.removeEventListener('keyup', handleKeyUp)\n  }, [handleKeyUp])\n\n  // @ts-ignore\n  return <Component ref={tabListRef} role=\"tablist\" {...props} />\n}\n\nTabGroup.Tab = Tab\nTabGroup.TabPanel = TabPanel\nTabGroup.TabList = TabList\nTabGroup.useTab = useTab\n\nTabGroup.direction = Direction\n"]},"metadata":{},"sourceType":"module"}